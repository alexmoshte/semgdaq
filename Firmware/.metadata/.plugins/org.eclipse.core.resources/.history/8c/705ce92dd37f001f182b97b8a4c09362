/*
 * _ADCn_INx_Offset.c
 *
 *  Created on: Oct 1, 2024
 *  Author: Mwangi Alex. W
 *
 *  This file calculates the mean for the base line signal (signal without muscle activation-arm(s) still) and uses
 *  this value as the offset to the signal(s) for each channel once muscle activation occurs
 */

//INCLUDES
#include "_ADCn_INx_Offset.h"

float32_t  ADC1_IN1_OffsetCalc(ADC1_IN1_MA *ADC1_IN1_Offset_ptr)
{
	float32_t Sum_1 = 0.0f; // Initialize the sum to zero

	for (uint32_t h=0; h<ADC_DMA_SIXTEENTHBUFFERSIZE; h++)
	{
		Sum_1 += ADC1_IN1_Offset_ptr->MA_ADC1_IN1_OutBfr[h];  // Accumulate the sum of all values in the buffer
	}

	return Sum_1/ADC_DMA_SIXTEENTHBUFFERSIZE; // Return the mean (baseline)
}


float32_t  ADC1_IN2_OffsetCalc(ADC1_IN2_MA *ADC1_IN2_Offset_ptr)
{
	float32_t Sum_2 = 0.0f; // Initialize the sum to zero

	for (uint32_t h=0; h<ADC_DMA_SIXTEENTHBUFFERSIZE; h++)
	{
		Sum_2 += ADC1_IN2_Offset_ptr->MA_ADC1_IN2_OutBfr[h];  // Accumulate the sum of all values in the buffer
	}

	return Sum_2/ADC_DMA_SIXTEENTHBUFFERSIZE; // Return the mean (baseline)
}



float32_t  ADC2_IN3_OffsetCalc(ADC2_IN3_MA *ADC2_IN3_Offset_ptr)
{
	float32_t Sum_3 = 0.0f; // Initialize the sum to zero

	for (uint32_t h=0; h<ADC_DMA_SIXTEENTHBUFFERSIZE; h++)
	{
		Sum_3 += ADC2_IN3_Offset_ptr->MA_ADC2_IN3_OutBfr[h];  // Accumulate the sum of all values in the buffer
	}

	return Sum_3/ADC_DMA_SIXTEENTHBUFFERSIZE; // Return the mean (baseline)
}
